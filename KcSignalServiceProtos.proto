/**
 * Copyright (C) 2017 KaiChat 
 *
 * Licensed according to the LICENSE file in this repository.
 */

package MagstreetAbstract;

option objc_class_prefix = "KCSignalServiceProtos";

message Envelope {
  enum Type {
    UNKNOWN                 = 0;
    CIPHERTEXT              = 1;
    KEY_EXCHANGE            = 2;
    PREKEY_BUNDLE           = 3;
    RECEIPT                 = 5;
    UNLOCK_REQUEST_REQUEST  = 6;
    UNLOCK_REQUEST_ACCEPT   = 7;
    UNLOCK_REQUEST_REJECT   = 8;

  }

  optional Type   type          = 1;
  optional string source        = 2;
  optional uint32 sourceDevice  = 7;
  optional string relay         = 3;
  optional string messageId     = 9;
  optional uint64 timestamp     = 5;
  optional bytes  legacyMessage = 6; // Contains an encrypted DataMessage
  optional bytes  content       = 8; // Contains an encrypted Content
}

message Content {
  optional DataMessage dataMessage = 1;
  optional SyncMessage syncMessage = 2;
}

message DataMessage {
  enum Flags {
    END_SESSION = 1;
    EXPIRATION_TIMER_UPDATE = 2;
  }
  enum Type {
    SOMESSAGETYPETEXT         = 0;
    SOMESSAGETYPEPHOTO        = 1;
    SOMESSAGETYPEVIDEO        = 2;
    SOMESSAGETYPEOTHER        = 3;
    SOMESSAGETYPEREPLY        = 4;
    SOMESSAGETYPESECRETTEXT   = 5;
    SOMESSAGETYPESECRETPHOTO  = 6;
    SOMESSAGETYPESECRETVIDEO  = 7;
    SOMESSAGETYPESECRETOTHER  = 8;
  }

  optional string              body          = 1;
  repeated AttachmentPointer   attachments   = 2;
  optional GroupContext        group         = 3;
  optional uint32              flags         = 4;
  optional uint32              expireTimer   = 5;
  optional bool                secret        = 6;
  optional SecretAccessDetails accessDetails = 7;
  optional Type                messageType   = 8;
}

message SyncMessage {
  message Sent {
    optional string      destination              = 1;
    optional uint64      timestamp                = 2;
    optional DataMessage message                  = 3;
    optional uint64      expirationStartTimestamp = 4;
  }

  message Contacts {
    optional AttachmentPointer blob = 1;
  }

  message Groups {
    optional AttachmentPointer blob = 1;
  }

  message Blocked {
    repeated string numbers = 1;
  }

  message Request {
    enum Type {
      UNKNOWN  = 0;
      CONTACTS = 1;
      GROUPS   = 2;
      BLOCKED  = 3;
    }

    optional Type type = 1;
  }

  message Read {
    optional string sender    = 1;
    optional uint64 timestamp = 2;
  }

  optional Sent     sent     = 1;
  optional Contacts contacts = 2;
  optional Groups   groups   = 3;
  optional Request  request  = 4;
  repeated Read     read     = 5;
  optional Blocked  blocked  = 6;
}

message SecretAccessDetails {
  enum Type {
    NONE     = 0;
    PASSCODE = 1;
    QANDA    = 2;
    GAMES    = 3;
    PATTERN  = 4;
    DEFAULTPASSCODE = 5;
  }

  optional string question     = 1;
  optional string answer       = 2;
  optional Type   type         = 3;
}

message AttachmentPointer {
  optional fixed64 id          = 1;
  optional string  contentType = 2;
  optional bytes   key         = 3;
  optional uint32  size        = 4;
  optional bytes   thumbnail   = 5;
  optional string  serverId    = 6;
}

message GroupContext {
  enum Type {
    UNKNOWN = 0;
    UPDATE  = 1;
    DELIVER = 2;
    QUIT    = 3;
  }
  optional bytes             id      = 1;
  optional Type              type    = 2;
  optional string            name    = 3;
  repeated string            members = 4;
  optional AttachmentPointer avatar  = 5;
}

message ContactDetails {
  message Avatar {
    optional string contentType = 1;
    optional uint32 length      = 2;
  }

  optional string number  = 1;
  optional string name    = 2;
  optional Avatar avatar  = 3;
  optional string color   = 4;
}

message GroupDetails {
  message Avatar {
    optional string contentType = 1;
    optional uint32 length      = 2;
  }

  optional bytes  id       = 1;
  optional string name     = 2;
  repeated string members  = 3;
  optional Avatar avatar   = 4;
  optional bool   active   = 5 [default = true];
}
