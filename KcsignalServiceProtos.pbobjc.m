// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KcsignalServiceProtos.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "KcsignalServiceProtos.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - KCSignalServiceProtosKcsignalServiceProtosRoot

@implementation KCSignalServiceProtosKcsignalServiceProtosRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor

static GPBFileDescriptor *KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"MagstreetAbstract"
                                                 objcPrefix:@"KCSignalServiceProtos"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - KCSignalServiceProtosEnvelope

@implementation KCSignalServiceProtosEnvelope

@dynamic hasType, type;
@dynamic hasSource, source;
@dynamic hasSourceDevice, sourceDevice;
@dynamic hasRelay, relay;
@dynamic hasMessageId, messageId;
@dynamic hasTimestamp, timestamp;
@dynamic hasLegacyMessage, legacyMessage;
@dynamic hasContent, content;

typedef struct KCSignalServiceProtosEnvelope__storage_ {
  uint32_t _has_storage_[1];
  KCSignalServiceProtosEnvelope_Type type;
  uint32_t sourceDevice;
  NSString *source;
  NSString *relay;
  NSData *legacyMessage;
  NSData *content;
  NSString *messageId;
  uint64_t timestamp;
} KCSignalServiceProtosEnvelope__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = KCSignalServiceProtosEnvelope_Type_EnumDescriptor,
        .number = KCSignalServiceProtosEnvelope_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosEnvelope__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "source",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosEnvelope_FieldNumber_Source,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosEnvelope__storage_, source),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "relay",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosEnvelope_FieldNumber_Relay,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosEnvelope__storage_, relay),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosEnvelope_FieldNumber_Timestamp,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosEnvelope__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "legacyMessage",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosEnvelope_FieldNumber_LegacyMessage,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosEnvelope__storage_, legacyMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "sourceDevice",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosEnvelope_FieldNumber_SourceDevice,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosEnvelope__storage_, sourceDevice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosEnvelope_FieldNumber_Content,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosEnvelope__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "messageId",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosEnvelope_FieldNumber_MessageId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosEnvelope__storage_, messageId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosEnvelope class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosEnvelope__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\006\r\000\007\014\000\t\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KCSignalServiceProtosEnvelope_Type

GPBEnumDescriptor *KCSignalServiceProtosEnvelope_Type_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Unknown\000Ciphertext\000KeyExchange\000PrekeyBun"
        "dle\000Receipt\000UnlockRequestRequest\000UnlockR"
        "equestAccept\000UnlockRequestReject\000";
    static const int32_t values[] = {
        KCSignalServiceProtosEnvelope_Type_Unknown,
        KCSignalServiceProtosEnvelope_Type_Ciphertext,
        KCSignalServiceProtosEnvelope_Type_KeyExchange,
        KCSignalServiceProtosEnvelope_Type_PrekeyBundle,
        KCSignalServiceProtosEnvelope_Type_Receipt,
        KCSignalServiceProtosEnvelope_Type_UnlockRequestRequest,
        KCSignalServiceProtosEnvelope_Type_UnlockRequestAccept,
        KCSignalServiceProtosEnvelope_Type_UnlockRequestReject,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KCSignalServiceProtosEnvelope_Type)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KCSignalServiceProtosEnvelope_Type_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KCSignalServiceProtosEnvelope_Type_IsValidValue(int32_t value__) {
  switch (value__) {
    case KCSignalServiceProtosEnvelope_Type_Unknown:
    case KCSignalServiceProtosEnvelope_Type_Ciphertext:
    case KCSignalServiceProtosEnvelope_Type_KeyExchange:
    case KCSignalServiceProtosEnvelope_Type_PrekeyBundle:
    case KCSignalServiceProtosEnvelope_Type_Receipt:
    case KCSignalServiceProtosEnvelope_Type_UnlockRequestRequest:
    case KCSignalServiceProtosEnvelope_Type_UnlockRequestAccept:
    case KCSignalServiceProtosEnvelope_Type_UnlockRequestReject:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KCSignalServiceProtosContent

@implementation KCSignalServiceProtosContent

@dynamic hasDataMessage, dataMessage;
@dynamic hasSyncMessage, syncMessage;

typedef struct KCSignalServiceProtosContent__storage_ {
  uint32_t _has_storage_[1];
  KCSignalServiceProtosDataMessage *dataMessage;
  KCSignalServiceProtosSyncMessage *syncMessage;
} KCSignalServiceProtosContent__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "dataMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosDataMessage),
        .number = KCSignalServiceProtosContent_FieldNumber_DataMessage,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosContent__storage_, dataMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "syncMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosSyncMessage),
        .number = KCSignalServiceProtosContent_FieldNumber_SyncMessage,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosContent__storage_, syncMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosContent class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosContent__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\013\000\002\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosDataMessage

@implementation KCSignalServiceProtosDataMessage

@dynamic hasBody, body;
@dynamic attachmentsArray, attachmentsArray_Count;
@dynamic hasGroup, group;
@dynamic hasFlags, flags;
@dynamic hasExpireTimer, expireTimer;
@dynamic hasSecret, secret;
@dynamic hasAccessDetails, accessDetails;
@dynamic hasMessageType, messageType;

typedef struct KCSignalServiceProtosDataMessage__storage_ {
  uint32_t _has_storage_[1];
  uint32_t flags;
  uint32_t expireTimer;
  KCSignalServiceProtosDataMessage_Type messageType;
  NSString *body;
  NSMutableArray *attachmentsArray;
  KCSignalServiceProtosGroupContext *group;
  KCSignalServiceProtosSecretAccessDetails *accessDetails;
} KCSignalServiceProtosDataMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "body",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosDataMessage_FieldNumber_Body,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosDataMessage__storage_, body),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "attachmentsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosAttachmentPointer),
        .number = KCSignalServiceProtosDataMessage_FieldNumber_AttachmentsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosDataMessage__storage_, attachmentsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "group",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosGroupContext),
        .number = KCSignalServiceProtosDataMessage_FieldNumber_Group,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosDataMessage__storage_, group),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "flags",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosDataMessage_FieldNumber_Flags,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosDataMessage__storage_, flags),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expireTimer",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosDataMessage_FieldNumber_ExpireTimer,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosDataMessage__storage_, expireTimer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "secret",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosDataMessage_FieldNumber_Secret,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "accessDetails",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosSecretAccessDetails),
        .number = KCSignalServiceProtosDataMessage_FieldNumber_AccessDetails,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosDataMessage__storage_, accessDetails),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "messageType",
        .dataTypeSpecific.enumDescFunc = KCSignalServiceProtosDataMessage_Type_EnumDescriptor,
        .number = KCSignalServiceProtosDataMessage_FieldNumber_MessageType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosDataMessage__storage_, messageType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosDataMessage class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosDataMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\005\013\000\007\r\000\010\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KCSignalServiceProtosDataMessage_Flags

GPBEnumDescriptor *KCSignalServiceProtosDataMessage_Flags_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "EndSession\000ExpirationTimerUpdate\000";
    static const int32_t values[] = {
        KCSignalServiceProtosDataMessage_Flags_EndSession,
        KCSignalServiceProtosDataMessage_Flags_ExpirationTimerUpdate,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KCSignalServiceProtosDataMessage_Flags)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KCSignalServiceProtosDataMessage_Flags_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KCSignalServiceProtosDataMessage_Flags_IsValidValue(int32_t value__) {
  switch (value__) {
    case KCSignalServiceProtosDataMessage_Flags_EndSession:
    case KCSignalServiceProtosDataMessage_Flags_ExpirationTimerUpdate:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum KCSignalServiceProtosDataMessage_Type

GPBEnumDescriptor *KCSignalServiceProtosDataMessage_Type_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Somessagetypetext\000Somessagetypephoto\000Som"
        "essagetypevideo\000Somessagetypeother\000Somes"
        "sagetypereply\000Somessagetypesecrettext\000So"
        "messagetypesecretphoto\000Somessagetypesecr"
        "etvideo\000Somessagetypesecretother\000";
    static const int32_t values[] = {
        KCSignalServiceProtosDataMessage_Type_Somessagetypetext,
        KCSignalServiceProtosDataMessage_Type_Somessagetypephoto,
        KCSignalServiceProtosDataMessage_Type_Somessagetypevideo,
        KCSignalServiceProtosDataMessage_Type_Somessagetypeother,
        KCSignalServiceProtosDataMessage_Type_Somessagetypereply,
        KCSignalServiceProtosDataMessage_Type_Somessagetypesecrettext,
        KCSignalServiceProtosDataMessage_Type_Somessagetypesecretphoto,
        KCSignalServiceProtosDataMessage_Type_Somessagetypesecretvideo,
        KCSignalServiceProtosDataMessage_Type_Somessagetypesecretother,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KCSignalServiceProtosDataMessage_Type)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KCSignalServiceProtosDataMessage_Type_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KCSignalServiceProtosDataMessage_Type_IsValidValue(int32_t value__) {
  switch (value__) {
    case KCSignalServiceProtosDataMessage_Type_Somessagetypetext:
    case KCSignalServiceProtosDataMessage_Type_Somessagetypephoto:
    case KCSignalServiceProtosDataMessage_Type_Somessagetypevideo:
    case KCSignalServiceProtosDataMessage_Type_Somessagetypeother:
    case KCSignalServiceProtosDataMessage_Type_Somessagetypereply:
    case KCSignalServiceProtosDataMessage_Type_Somessagetypesecrettext:
    case KCSignalServiceProtosDataMessage_Type_Somessagetypesecretphoto:
    case KCSignalServiceProtosDataMessage_Type_Somessagetypesecretvideo:
    case KCSignalServiceProtosDataMessage_Type_Somessagetypesecretother:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KCSignalServiceProtosSyncMessage

@implementation KCSignalServiceProtosSyncMessage

@dynamic hasSent, sent;
@dynamic hasContacts, contacts;
@dynamic hasGroups, groups;
@dynamic hasRequest, request;
@dynamic readArray, readArray_Count;
@dynamic hasBlocked, blocked;

typedef struct KCSignalServiceProtosSyncMessage__storage_ {
  uint32_t _has_storage_[1];
  KCSignalServiceProtosSyncMessage_Sent *sent;
  KCSignalServiceProtosSyncMessage_Contacts *contacts;
  KCSignalServiceProtosSyncMessage_Groups *groups;
  KCSignalServiceProtosSyncMessage_Request *request;
  NSMutableArray *readArray;
  KCSignalServiceProtosSyncMessage_Blocked *blocked;
} KCSignalServiceProtosSyncMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sent",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosSyncMessage_Sent),
        .number = KCSignalServiceProtosSyncMessage_FieldNumber_Sent,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage__storage_, sent),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "contacts",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosSyncMessage_Contacts),
        .number = KCSignalServiceProtosSyncMessage_FieldNumber_Contacts,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage__storage_, contacts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "groups",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosSyncMessage_Groups),
        .number = KCSignalServiceProtosSyncMessage_FieldNumber_Groups,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage__storage_, groups),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "request",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosSyncMessage_Request),
        .number = KCSignalServiceProtosSyncMessage_FieldNumber_Request,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage__storage_, request),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "readArray",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosSyncMessage_Read),
        .number = KCSignalServiceProtosSyncMessage_FieldNumber_ReadArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage__storage_, readArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "blocked",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosSyncMessage_Blocked),
        .number = KCSignalServiceProtosSyncMessage_FieldNumber_Blocked,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage__storage_, blocked),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosSyncMessage class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosSyncMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosSyncMessage_Sent

@implementation KCSignalServiceProtosSyncMessage_Sent

@dynamic hasDestination, destination;
@dynamic hasTimestamp, timestamp;
@dynamic hasMessage, message;
@dynamic hasExpirationStartTimestamp, expirationStartTimestamp;

typedef struct KCSignalServiceProtosSyncMessage_Sent__storage_ {
  uint32_t _has_storage_[1];
  NSString *destination;
  KCSignalServiceProtosDataMessage *message;
  uint64_t timestamp;
  uint64_t expirationStartTimestamp;
} KCSignalServiceProtosSyncMessage_Sent__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "destination",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosSyncMessage_Sent_FieldNumber_Destination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Sent__storage_, destination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosSyncMessage_Sent_FieldNumber_Timestamp,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Sent__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "message",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosDataMessage),
        .number = KCSignalServiceProtosSyncMessage_Sent_FieldNumber_Message,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Sent__storage_, message),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "expirationStartTimestamp",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosSyncMessage_Sent_FieldNumber_ExpirationStartTimestamp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Sent__storage_, expirationStartTimestamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosSyncMessage_Sent class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosSyncMessage_Sent__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\004\030\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KCSignalServiceProtosSyncMessage)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosSyncMessage_Contacts

@implementation KCSignalServiceProtosSyncMessage_Contacts

@dynamic hasBlob, blob;

typedef struct KCSignalServiceProtosSyncMessage_Contacts__storage_ {
  uint32_t _has_storage_[1];
  KCSignalServiceProtosAttachmentPointer *blob;
} KCSignalServiceProtosSyncMessage_Contacts__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "blob",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosAttachmentPointer),
        .number = KCSignalServiceProtosSyncMessage_Contacts_FieldNumber_Blob,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Contacts__storage_, blob),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosSyncMessage_Contacts class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosSyncMessage_Contacts__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KCSignalServiceProtosSyncMessage)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosSyncMessage_Groups

@implementation KCSignalServiceProtosSyncMessage_Groups

@dynamic hasBlob, blob;

typedef struct KCSignalServiceProtosSyncMessage_Groups__storage_ {
  uint32_t _has_storage_[1];
  KCSignalServiceProtosAttachmentPointer *blob;
} KCSignalServiceProtosSyncMessage_Groups__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "blob",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosAttachmentPointer),
        .number = KCSignalServiceProtosSyncMessage_Groups_FieldNumber_Blob,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Groups__storage_, blob),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosSyncMessage_Groups class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosSyncMessage_Groups__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KCSignalServiceProtosSyncMessage)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosSyncMessage_Blocked

@implementation KCSignalServiceProtosSyncMessage_Blocked

@dynamic numbersArray, numbersArray_Count;

typedef struct KCSignalServiceProtosSyncMessage_Blocked__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *numbersArray;
} KCSignalServiceProtosSyncMessage_Blocked__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "numbersArray",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosSyncMessage_Blocked_FieldNumber_NumbersArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Blocked__storage_, numbersArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosSyncMessage_Blocked class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosSyncMessage_Blocked__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KCSignalServiceProtosSyncMessage)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosSyncMessage_Request

@implementation KCSignalServiceProtosSyncMessage_Request

@dynamic hasType, type;

typedef struct KCSignalServiceProtosSyncMessage_Request__storage_ {
  uint32_t _has_storage_[1];
  KCSignalServiceProtosSyncMessage_Request_Type type;
} KCSignalServiceProtosSyncMessage_Request__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = KCSignalServiceProtosSyncMessage_Request_Type_EnumDescriptor,
        .number = KCSignalServiceProtosSyncMessage_Request_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Request__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosSyncMessage_Request class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosSyncMessage_Request__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KCSignalServiceProtosSyncMessage)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KCSignalServiceProtosSyncMessage_Request_Type

GPBEnumDescriptor *KCSignalServiceProtosSyncMessage_Request_Type_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Unknown\000Contacts\000Groups\000Blocked\000";
    static const int32_t values[] = {
        KCSignalServiceProtosSyncMessage_Request_Type_Unknown,
        KCSignalServiceProtosSyncMessage_Request_Type_Contacts,
        KCSignalServiceProtosSyncMessage_Request_Type_Groups,
        KCSignalServiceProtosSyncMessage_Request_Type_Blocked,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KCSignalServiceProtosSyncMessage_Request_Type)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KCSignalServiceProtosSyncMessage_Request_Type_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KCSignalServiceProtosSyncMessage_Request_Type_IsValidValue(int32_t value__) {
  switch (value__) {
    case KCSignalServiceProtosSyncMessage_Request_Type_Unknown:
    case KCSignalServiceProtosSyncMessage_Request_Type_Contacts:
    case KCSignalServiceProtosSyncMessage_Request_Type_Groups:
    case KCSignalServiceProtosSyncMessage_Request_Type_Blocked:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KCSignalServiceProtosSyncMessage_Read

@implementation KCSignalServiceProtosSyncMessage_Read

@dynamic hasSender, sender;
@dynamic hasTimestamp, timestamp;

typedef struct KCSignalServiceProtosSyncMessage_Read__storage_ {
  uint32_t _has_storage_[1];
  NSString *sender;
  uint64_t timestamp;
} KCSignalServiceProtosSyncMessage_Read__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sender",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosSyncMessage_Read_FieldNumber_Sender,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Read__storage_, sender),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosSyncMessage_Read_FieldNumber_Timestamp,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSyncMessage_Read__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosSyncMessage_Read class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosSyncMessage_Read__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KCSignalServiceProtosSyncMessage)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosSecretAccessDetails

@implementation KCSignalServiceProtosSecretAccessDetails

@dynamic hasQuestion, question;
@dynamic hasAnswer, answer;
@dynamic hasType, type;

typedef struct KCSignalServiceProtosSecretAccessDetails__storage_ {
  uint32_t _has_storage_[1];
  KCSignalServiceProtosSecretAccessDetails_Type type;
  NSString *question;
  NSString *answer;
} KCSignalServiceProtosSecretAccessDetails__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "question",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosSecretAccessDetails_FieldNumber_Question,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSecretAccessDetails__storage_, question),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "answer",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosSecretAccessDetails_FieldNumber_Answer,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSecretAccessDetails__storage_, answer),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = KCSignalServiceProtosSecretAccessDetails_Type_EnumDescriptor,
        .number = KCSignalServiceProtosSecretAccessDetails_FieldNumber_Type,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosSecretAccessDetails__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosSecretAccessDetails class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosSecretAccessDetails__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KCSignalServiceProtosSecretAccessDetails_Type

GPBEnumDescriptor *KCSignalServiceProtosSecretAccessDetails_Type_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "None\000Passcode\000Qanda\000Games\000Pattern\000Defaul"
        "tpasscode\000";
    static const int32_t values[] = {
        KCSignalServiceProtosSecretAccessDetails_Type_None,
        KCSignalServiceProtosSecretAccessDetails_Type_Passcode,
        KCSignalServiceProtosSecretAccessDetails_Type_Qanda,
        KCSignalServiceProtosSecretAccessDetails_Type_Games,
        KCSignalServiceProtosSecretAccessDetails_Type_Pattern,
        KCSignalServiceProtosSecretAccessDetails_Type_Defaultpasscode,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KCSignalServiceProtosSecretAccessDetails_Type)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KCSignalServiceProtosSecretAccessDetails_Type_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KCSignalServiceProtosSecretAccessDetails_Type_IsValidValue(int32_t value__) {
  switch (value__) {
    case KCSignalServiceProtosSecretAccessDetails_Type_None:
    case KCSignalServiceProtosSecretAccessDetails_Type_Passcode:
    case KCSignalServiceProtosSecretAccessDetails_Type_Qanda:
    case KCSignalServiceProtosSecretAccessDetails_Type_Games:
    case KCSignalServiceProtosSecretAccessDetails_Type_Pattern:
    case KCSignalServiceProtosSecretAccessDetails_Type_Defaultpasscode:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KCSignalServiceProtosAttachmentPointer

@implementation KCSignalServiceProtosAttachmentPointer

@dynamic hasId_p, id_p;
@dynamic hasContentType, contentType;
@dynamic hasKey, key;
@dynamic hasSize, size;
@dynamic hasThumbnail, thumbnail;
@dynamic hasServerId, serverId;

typedef struct KCSignalServiceProtosAttachmentPointer__storage_ {
  uint32_t _has_storage_[1];
  uint32_t size;
  NSString *contentType;
  NSData *key;
  NSData *thumbnail;
  NSString *serverId;
  uint64_t id_p;
} KCSignalServiceProtosAttachmentPointer__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosAttachmentPointer_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosAttachmentPointer__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFixed64,
      },
      {
        .name = "contentType",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosAttachmentPointer_FieldNumber_ContentType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosAttachmentPointer__storage_, contentType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "key",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosAttachmentPointer_FieldNumber_Key,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosAttachmentPointer__storage_, key),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosAttachmentPointer_FieldNumber_Size,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosAttachmentPointer__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "thumbnail",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosAttachmentPointer_FieldNumber_Thumbnail,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosAttachmentPointer__storage_, thumbnail),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "serverId",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosAttachmentPointer_FieldNumber_ServerId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosAttachmentPointer__storage_, serverId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosAttachmentPointer class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosAttachmentPointer__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\002\013\000\006\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosGroupContext

@implementation KCSignalServiceProtosGroupContext

@dynamic hasId_p, id_p;
@dynamic hasType, type;
@dynamic hasName, name;
@dynamic membersArray, membersArray_Count;
@dynamic hasAvatar, avatar;

typedef struct KCSignalServiceProtosGroupContext__storage_ {
  uint32_t _has_storage_[1];
  KCSignalServiceProtosGroupContext_Type type;
  NSData *id_p;
  NSString *name;
  NSMutableArray *membersArray;
  KCSignalServiceProtosAttachmentPointer *avatar;
} KCSignalServiceProtosGroupContext__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosGroupContext_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosGroupContext__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = KCSignalServiceProtosGroupContext_Type_EnumDescriptor,
        .number = KCSignalServiceProtosGroupContext_FieldNumber_Type,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosGroupContext__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosGroupContext_FieldNumber_Name,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosGroupContext__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "membersArray",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosGroupContext_FieldNumber_MembersArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosGroupContext__storage_, membersArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "avatar",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosAttachmentPointer),
        .number = KCSignalServiceProtosGroupContext_FieldNumber_Avatar,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosGroupContext__storage_, avatar),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosGroupContext class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosGroupContext__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KCSignalServiceProtosGroupContext_Type

GPBEnumDescriptor *KCSignalServiceProtosGroupContext_Type_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Unknown\000Update\000Deliver\000Quit\000";
    static const int32_t values[] = {
        KCSignalServiceProtosGroupContext_Type_Unknown,
        KCSignalServiceProtosGroupContext_Type_Update,
        KCSignalServiceProtosGroupContext_Type_Deliver,
        KCSignalServiceProtosGroupContext_Type_Quit,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KCSignalServiceProtosGroupContext_Type)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KCSignalServiceProtosGroupContext_Type_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KCSignalServiceProtosGroupContext_Type_IsValidValue(int32_t value__) {
  switch (value__) {
    case KCSignalServiceProtosGroupContext_Type_Unknown:
    case KCSignalServiceProtosGroupContext_Type_Update:
    case KCSignalServiceProtosGroupContext_Type_Deliver:
    case KCSignalServiceProtosGroupContext_Type_Quit:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KCSignalServiceProtosContactDetails

@implementation KCSignalServiceProtosContactDetails

@dynamic hasNumber, number;
@dynamic hasName, name;
@dynamic hasAvatar, avatar;
@dynamic hasColor, color;

typedef struct KCSignalServiceProtosContactDetails__storage_ {
  uint32_t _has_storage_[1];
  NSString *number;
  NSString *name;
  KCSignalServiceProtosContactDetails_Avatar *avatar;
  NSString *color;
} KCSignalServiceProtosContactDetails__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "number",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosContactDetails_FieldNumber_Number,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosContactDetails__storage_, number),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosContactDetails_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosContactDetails__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "avatar",
        .dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosContactDetails_Avatar),
        .number = KCSignalServiceProtosContactDetails_FieldNumber_Avatar,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosContactDetails__storage_, avatar),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "color",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosContactDetails_FieldNumber_Color,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosContactDetails__storage_, color),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosContactDetails class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosContactDetails__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosContactDetails_Avatar

@implementation KCSignalServiceProtosContactDetails_Avatar

@dynamic hasContentType, contentType;
@dynamic hasLength, length;

typedef struct KCSignalServiceProtosContactDetails_Avatar__storage_ {
  uint32_t _has_storage_[1];
  uint32_t length;
  NSString *contentType;
} KCSignalServiceProtosContactDetails_Avatar__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "contentType",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosContactDetails_Avatar_FieldNumber_ContentType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosContactDetails_Avatar__storage_, contentType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "length",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosContactDetails_Avatar_FieldNumber_Length,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosContactDetails_Avatar__storage_, length),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosContactDetails_Avatar class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosContactDetails_Avatar__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KCSignalServiceProtosContactDetails)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosGroupDetails

@implementation KCSignalServiceProtosGroupDetails

@dynamic hasId_p, id_p;
@dynamic hasName, name;
@dynamic membersArray, membersArray_Count;
@dynamic hasAvatar, avatar;
@dynamic hasActive, active;

typedef struct KCSignalServiceProtosGroupDetails__storage_ {
  uint32_t _has_storage_[1];
  NSData *id_p;
  NSString *name;
  NSMutableArray *membersArray;
  KCSignalServiceProtosGroupDetails_Avatar *avatar;
} KCSignalServiceProtosGroupDetails__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueData = nil,
        .core.name = "id_p",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KCSignalServiceProtosGroupDetails_FieldNumber_Id_p,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KCSignalServiceProtosGroupDetails__storage_, id_p),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeBytes,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "name",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KCSignalServiceProtosGroupDetails_FieldNumber_Name,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KCSignalServiceProtosGroupDetails__storage_, name),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "membersArray",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KCSignalServiceProtosGroupDetails_FieldNumber_MembersArray,
        .core.hasIndex = GPBNoHasBit,
        .core.offset = (uint32_t)offsetof(KCSignalServiceProtosGroupDetails__storage_, membersArray),
        .core.flags = GPBFieldRepeated,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "avatar",
        .core.dataTypeSpecific.className = GPBStringifySymbol(KCSignalServiceProtosGroupDetails_Avatar),
        .core.number = KCSignalServiceProtosGroupDetails_FieldNumber_Avatar,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KCSignalServiceProtosGroupDetails__storage_, avatar),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueBool = YES,
        .core.name = "active",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KCSignalServiceProtosGroupDetails_FieldNumber_Active,
        .core.hasIndex = 3,
        .core.offset = 4,  // Stored in _has_storage_ to save space.
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue),
        .core.dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosGroupDetails class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KCSignalServiceProtosGroupDetails__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KCSignalServiceProtosGroupDetails_Avatar

@implementation KCSignalServiceProtosGroupDetails_Avatar

@dynamic hasContentType, contentType;
@dynamic hasLength, length;

typedef struct KCSignalServiceProtosGroupDetails_Avatar__storage_ {
  uint32_t _has_storage_[1];
  uint32_t length;
  NSString *contentType;
} KCSignalServiceProtosGroupDetails_Avatar__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "contentType",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosGroupDetails_Avatar_FieldNumber_ContentType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosGroupDetails_Avatar__storage_, contentType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "length",
        .dataTypeSpecific.className = NULL,
        .number = KCSignalServiceProtosGroupDetails_Avatar_FieldNumber_Length,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KCSignalServiceProtosGroupDetails_Avatar__storage_, length),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KCSignalServiceProtosGroupDetails_Avatar class]
                                     rootClass:[KCSignalServiceProtosKcsignalServiceProtosRoot class]
                                          file:KCSignalServiceProtosKcsignalServiceProtosRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KCSignalServiceProtosGroupDetails_Avatar__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KCSignalServiceProtosGroupDetails)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
